---
kind: pipeline
type: docker
name: test-linux-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: testing
    image: golang:1.17
    commands:
      - make test

---
kind: pipeline
type: docker
name: build-linux-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: fetch
    image: docker:git
    commands:
      - git fetch --tags

  - name: build-linux-amd64-artifact
    pull: true
    image: golang:1.17
    commands:
      - export NAME=spiry-$${GOOS}-$${GOARCH}
      - apt-get -q -o=Dpkg::Use-Pty=0 update && apt-get -q -o=Dpkg::Use-Pty=0 install -y bzip2 upx-ucl xz-utils
      - make package NAME=$${NAME}
    environment:
      GOARCH: amd64
      GOOS: linux
    volumes:
      - name: build
        path: /drone/src/build

  - name: flush-to-storage
    image: amazon/aws-cli:latest
    pull: true
    commands:
      - aws configure set default.s3.signature_version s3v4
      - aws --endpoint-url $${AWS_ENDPOINT} s3 --no-progress cp build/*.tar s3://$${AWS_S3_BUCKET}/$${DRONE_REPO}/$${DRONE_BUILD_NUMBER}/
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_ENDPOINT:
        from_secret: aws_endpoint
      AWS_S3_BUCKET:
        from_secret: aws_s3_bucket
      AWS_DEFAULT_REGION:
        from_secret: aws_default_region

depends_on:
  - test-linux-amd64

---
kind: pipeline
type: docker
name: build-darwin-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: fetch
    image: docker:git
    commands:
      - git fetch --tags

  - name: build-darwin-amd64-artifact
    pull: true
    image: golang:1.17
    commands:
      - export NAME=spiry-$${GOOS}-$${GOARCH}
      - apt-get -q -o=Dpkg::Use-Pty=0 update && apt-get -q -o=Dpkg::Use-Pty=0 install -y bzip2 upx-ucl xz-utils
      - make package NAME=$${NAME}
    environment:
      GOARCH: amd64
      GOOS: darwin

  - name: flush-to-storage
    image: amazon/aws-cli:latest
    pull: true
    commands:
      - aws configure set default.s3.signature_version s3v4
      - aws --endpoint-url $${AWS_ENDPOINT} s3 --no-progress cp build/*.tar s3://$${AWS_S3_BUCKET}/$${DRONE_REPO}/$${DRONE_BUILD_NUMBER}/
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_ENDPOINT:
        from_secret: aws_endpoint
      AWS_S3_BUCKET:
        from_secret: aws_s3_bucket
      AWS_DEFAULT_REGION:
        from_secret: aws_default_region

depends_on:
  - test-linux-amd64

---
kind: pipeline
type: docker
name: build-linux-armv7

platform:
  os: linux
  arch: amd64

steps:
  - name: fetch
    image: docker:git
    commands:
      - git fetch --tags

  - name: build-linux-arm64-artifact
    pull: true
    image: golang:1.17
    commands:
      - export NAME=spiry-$${GOOS}-$${GOARCH}
      - apt-get -q -o=Dpkg::Use-Pty=0 update && apt-get -q -o=Dpkg::Use-Pty=0 install -y bzip2 upx-ucl xz-utils
      - make package NAME=$${NAME}
    environment:
      GOARCH: arm
      GOARM: 7
      GOOS: linux

  - name: flush-to-storage
    image: amazon/aws-cli:latest
    pull: true
    commands:
      - aws configure set default.s3.signature_version s3v4
      - aws --endpoint-url $${AWS_ENDPOINT} s3 --no-progress cp build/*.tar s3://$${AWS_S3_BUCKET}/$${DRONE_REPO}/$${DRONE_BUILD_NUMBER}/
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_ENDPOINT:
        from_secret: aws_endpoint
      AWS_S3_BUCKET:
        from_secret: aws_s3_bucket
      AWS_DEFAULT_REGION:
        from_secret: aws_default_region

depends_on:
  - test-linux-amd64

---
kind: pipeline
type: docker
name: build-darwin-arm64

platform:
  os: linux
  arch: amd64

steps:
  - name: fetch
    image: docker:git
    commands:
      - git fetch --tags

  - name: build-darwin-arm64-artifact
    pull: true
    image: golang:1.17
    commands:
      - export NAME=spiry-$${GOOS}-$${GOARCH}
      - apt-get -q -o=Dpkg::Use-Pty=0 update && apt-get -q -o=Dpkg::Use-Pty=0 install -y bzip2 upx-ucl xz-utils
      - make package NAME=$${NAME}
    environment:
      GOARCH: arm64
      GOOS: darwin

  - name: flush-to-storage
    image: amazon/aws-cli:latest
    pull: true
    commands:
      - aws configure set default.s3.signature_version s3v4
      - aws --endpoint-url $${AWS_ENDPOINT} s3 --no-progress cp build/*.tar s3://$${AWS_S3_BUCKET}/$${DRONE_REPO}/$${DRONE_BUILD_NUMBER}/
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_ENDPOINT:
        from_secret: aws_endpoint
      AWS_S3_BUCKET:
        from_secret: aws_s3_bucket
      AWS_DEFAULT_REGION:
        from_secret: aws_default_region

depends_on:
  - test-linux-amd64

...

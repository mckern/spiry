---
kind: pipeline
type: docker
name: test-linux-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: testing
    image: golang:1.16
    commands:
      - make test

---
kind: pipeline
type: docker
name: build-linux-amd64

depends_on:
  - test-linux-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: build-linux-amd64-artifact
    image: golang:1.16
    volumes:
      - name: build
        path: /drone/src/build
    commands:
      - export NAME=spiry-$${GOOS}-$${GOARCH}
      - apt-get update && apt-get install -y bzip2 upx-ucl xz-utils
      - make package NAME=$${NAME}
    environment:
      GOOS: linux
      GOARCH: amd64

  - name: flush-to-storage
    image: plugins/s3-cache
    settings:
      pull: true
      endpoint: http://ambry.home.mckern.sh
      root: /packages
      access_key:
        from_secret: aws_access_key_id
      secret_key:
        from_secret: aws_secret_access_key
      rebuild: true
      mount:
        - build/*.tar

---
kind: pipeline
type: docker
name: build-darwin-amd64

depends_on:
  - test-linux-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: build-darwin-amd64-artifact
    image: golang:1.16
    volumes:
      - name: build
        path: /drone/src/build
    commands:
      - export NAME=spiry-$${GOOS}-$${GOARCH}
      - apt-get update && apt-get install -y bzip2 upx-ucl xz-utils
      - make package NAME=$${NAME}
    environment:
      GOOS: darwin
      GOARCH: amd64

---
kind: pipeline
type: docker
name: build-linux-armv7

depends_on:
  - test-linux-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: build-linux-arm64-artifact
    image: golang:1.16
    volumes:
      - name: build
        path: /drone/src/build
    commands:
      - export NAME=spiry-$${GOOS}-$${GOARCH}
      - apt-get update && apt-get install -y bzip2 upx-ucl xz-utils
      - make package NAME=$${NAME}
    environment:
      GOOS: linux
      GOARCH: arm
      GOARM: 7

---
kind: pipeline
type: docker
name: build-darwin-arm64

depends_on:
  - test-linux-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: build-darwin-arm64-artifact
    image: golang:1.16
    volumes:
      - name: build
        path: /drone/src/build
    commands:
      - export NAME=spiry-$${GOOS}-$${GOARCH}
      - apt-get update && apt-get install -y bzip2 upx-ucl xz-utils
      - make package NAME=$${NAME}
    environment:
      GOOS: darwin
      GOARCH: arm64
